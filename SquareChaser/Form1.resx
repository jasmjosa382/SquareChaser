<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="gameTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>